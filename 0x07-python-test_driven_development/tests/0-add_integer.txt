The ``0-add_ integer`` module
======================

using ``add_integer``
----------------------

``add_integer`` returns the sum of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator.

Import module
    >>> add_integer = __import__("0-add_integer").add_integer

Check module Docstring
    >>> a = __import__("0-add_integer").__doc__
    >>> len(a) >= 1
    True

Check function Docstring
    >>> a = __import__("0-add_integer").add_integer.__doc__
    >>> len(a) >= 1
    True

    >>> add_integer(4, 3)
    7

    >>> add_integer(-3, 3)
    0

    >>> add_integer(2)
    100

    >>> add_integer(1.3, 1)
    2

    >>> add_integer(1.5, 1.5)
    3

    >>> add_integer("a")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(1, "a")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'